#!/usr/bin/env python3
"""
Teste simples dos endpoints sem MySQL
"""

import requests
import json

# URL base da API
BASE_URL = "http://localhost:8000"

def test_simple_endpoints():
    """Testar endpoints b√°sicos"""
    
    print("üß™ Testando endpoints b√°sicos...")
    
    try:
        # Teste 1: Verificar se a API est√° rodando
        print("\n1Ô∏è‚É£ Testando se a API est√° rodando...")
        response = requests.get(f"{BASE_URL}/docs")
        if response.status_code == 200:
            print("‚úÖ API est√° rodando! Documenta√ß√£o dispon√≠vel em /docs")
        else:
            print(f"‚ùå API n√£o est√° rodando: {response.status_code}")
            return
        
        # Teste 2: Testar endpoint de procedimentos (que j√° existia)
        print("\n2Ô∏è‚É£ Testando endpoint de procedimentos...")
        response = requests.get(f"{BASE_URL}/procedimentos")
        if response.status_code == 200:
            print("‚úÖ Endpoint de procedimentos funcionando")
        else:
            print(f"‚ùå Erro no endpoint de procedimentos: {response.status_code}")
        
        # Teste 3: Verificar se os endpoints de planejamento est√£o registrados
        print("\n3Ô∏è‚É£ Verificando endpoints de planejamento...")
        response = requests.get(f"{BASE_URL}/openapi.json")
        if response.status_code == 200:
            openapi_data = response.json()
            paths = openapi_data.get('paths', {})
            
            planejamento_endpoints = [path for path in paths.keys() if 'planejamento' in path]
            if planejamento_endpoints:
                print(f"‚úÖ Endpoints de planejamento encontrados: {planejamento_endpoints}")
            else:
                print("‚ùå Nenhum endpoint de planejamento encontrado")
        else:
            print(f"‚ùå Erro ao obter OpenAPI: {response.status_code}")
        
        print("\nüéâ Teste b√°sico conclu√≠do!")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå Erro: Servidor n√£o est√° rodando. Execute o servidor primeiro.")
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")

if __name__ == "__main__":
    test_simple_endpoints()
